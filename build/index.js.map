{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/context.tsx", "../app/createEmotionCache.ts", "../app/root.tsx", "../app/routes/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// entry.server.tsx\nimport { renderToString } from \"react-dom/server\";\nimport { CacheProvider } from \"@emotion/react\";\nimport createEmotionServer from \"@emotion/server/create-instance\";\nimport { RemixServer } from \"@remix-run/react\";\nimport type { EntryContext } from \"@remix-run/node\"; // Depends on the runtime you choose\n\nimport { ServerStyleContext } from \"./context\";\nimport createEmotionCache from \"./createEmotionCache\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const cache = createEmotionCache();\n  const { extractCriticalToChunks } = createEmotionServer(cache);\n\n  const html = renderToString(\n    <ServerStyleContext.Provider value={null}>\n      <CacheProvider value={cache}>\n        <RemixServer context={remixContext} url={request.url} />\n      </CacheProvider>\n    </ServerStyleContext.Provider>\n  );\n\n  const chunks = extractCriticalToChunks(html);\n\n  const markup = renderToString(\n    <ServerStyleContext.Provider value={chunks.styles}>\n      <CacheProvider value={cache}>\n        <RemixServer context={remixContext} url={request.url} />\n      </CacheProvider>\n    </ServerStyleContext.Provider>\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(`<!DOCTYPE html>${markup}`, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "// context.tsx\nimport React, { createContext } from \"react\";\n\nexport interface ServerStyleContextData {\n  key: string;\n  ids: Array<string>;\n  css: string;\n}\n\nexport const ServerStyleContext = createContext<\n  ServerStyleContextData[] | null\n>(null);\n\nexport interface ClientStyleContextData {\n  reset: () => void;\n}\n\nexport const ClientStyleContext = createContext<ClientStyleContextData | null>(\n  null\n);\n", "// createEmotionCache.ts\nimport createCache from \"@emotion/cache\";\n\nexport default function createEmotionCache() {\n  return createCache({ key: \"css\" });\n}\n", "import React from \"react\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useCatch,\n} from \"@remix-run/react\";\nimport type { MetaFunction } from \"@remix-run/node\";\nimport { VStack, Heading, ChakraProvider, Text } from \"@chakra-ui/react\";\nimport { withEmotionCache } from \"@emotion/react\";\n\nimport { ServerStyleContext, ClientStyleContext } from \"./context\";\n\nexport const meta: MetaFunction = () => {\n  return { title: \"to do app\" };\n};\n\nexport default function App() {\n  return (\n    <Document>\n      <ChakraProvider>\n        <Outlet />\n      </ChakraProvider>\n    </Document>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n  return (\n    <Document>\n      <VStack h=\"100vh\" justify=\"center\">\n        <Heading>There was an error</Heading>\n        <Text>{error.message}</Text>\n        <hr />\n        <Text>\n          Hey, developer, you should replace this with what you want your users\n          to see.\n        </Text>\n      </VStack>\n    </Document>\n  );\n}\n\nexport function CatchBoundary() {\n  let caught = useCatch();\n  let message;\n  switch (caught.status) {\n    case 401:\n      message = (\n        <Text>\n          Oops! Looks like you tried to visit a page that you do not have access\n          to.\n        </Text>\n      );\n      break;\n    case 404:\n      message = (\n        <Text>\n          Oops! Looks like you tried to visit a page that does not exist.\n        </Text>\n      );\n      break;\n\n    default:\n      throw new Error(caught.data || caught.statusText);\n  }\n\n  return (\n    <Document>\n      <VStack h=\"100vh\" justify=\"center\">\n        <Heading>\n          {caught.status}: {caught.statusText}\n        </Heading>\n        {message}\n      </VStack>\n    </Document>\n  );\n}\n\ninterface DocumentProps {\n  children: React.ReactNode;\n}\n\nconst Document = withEmotionCache(\n  ({ children }: DocumentProps, emotionCache) => {\n    const serverSyleData = React.useContext(ServerStyleContext);\n    const clientStyleData = React.useContext(ClientStyleContext);\n\n    // Only executed on client\n    React.useEffect(() => {\n      // re-link sheet container\n      emotionCache.sheet.container = document.head;\n      // re-inject tags\n      const tags = emotionCache.sheet.tags;\n      emotionCache.sheet.flush();\n      tags.forEach((tag) => {\n        (emotionCache.sheet as any)._insertTag(tag);\n      });\n      // reset cache to reapply global styles\n      clientStyleData?.reset();\n    }, []);\n\n    return (\n      <html lang=\"en\">\n        <head>\n          <meta charSet=\"utf-8\" />\n          <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n          <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n          <link rel=\"preconnect\" href=\"https://fonts.gstaticom\" />\n          <link\n            href=\"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;1,300;1,400;1,500;1,600;1,700;1,800&display=swap\"\n            rel=\"stylesheet\"\n          />\n          <Meta />\n          <Links />\n          {serverSyleData?.map(({ key, ids, css }) => (\n            <style\n              key={key}\n              data-emotion={`${key} ${ids.join(\" \")}`}\n              dangerouslySetInnerHTML={{ __html: css }}\n            />\n          ))}\n        </head>\n        <body>\n          {children}\n          <ScrollRestoration />\n          <Scripts />\n          {process.env.NODE_ENV === \"development\" ? <LiveReload /> : null}\n        </body>\n      </html>\n    );\n  }\n);\n", "import { Box, Text } from \"@chakra-ui/react\";\nimport { Link } from \"@remix-run/react\";\n\nexport const index = () => {\n  return (\n    <Box>\n      <Text>Hello</Text>\n    </Box>\n  );\n};\n\nexport default index;\n", "export default {'version':'ddcb5df7','entry':{'module':'/build/entry.client-FAECKPZ3.js','imports':['/build/_shared/chunk-44HT5C55.js','/build/_shared/chunk-WPOXIF2O.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-B3SWR3B3.js','imports':['/build/_shared/chunk-P7R2XSIP.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-U3F7N6I3.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-DDCB5DF7.js'};", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    }\n  };"],
  "mappings": "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",
  "names": ["import_react", "createCache", "createEmotionServer", "import_react", "React", "import_react"]
}
