{
  "version": 3,
  "sources": ["../../app/root.tsx"],
  "sourcesContent": ["import React from \"react\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useCatch,\n} from \"@remix-run/react\";\nimport type { MetaFunction } from \"remix\";\nimport { VStack, Heading, ChakraProvider, Text } from \"@chakra-ui/react\";\nimport { withEmotionCache } from \"@emotion/react\";\n\nimport { ServerStyleContext, ClientStyleContext } from \"./context\";\n\nexport const meta: MetaFunction = () => {\n  return { title: \"Chakra UI Boilerplate\" };\n};\n\nexport default function App() {\n  return (\n    <Document>\n      <ChakraProvider>\n        <Outlet />\n      </ChakraProvider>\n    </Document>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n  return (\n    <Document>\n      <VStack h=\"100vh\" justify=\"center\">\n        <Heading>There was an error</Heading>\n        <Text>{error.message}</Text>\n        <hr />\n        <Text>\n          Hey, developer, you should replace this with what you want your users\n          to see.\n        </Text>\n      </VStack>\n    </Document>\n  );\n}\n\nexport function CatchBoundary() {\n  let caught = useCatch();\n  let message;\n  switch (caught.status) {\n    case 401:\n      message = (\n        <Text>\n          Oops! Looks like you tried to visit a page that you do not have access\n          to.\n        </Text>\n      );\n      break;\n    case 404:\n      message = (\n        <Text>\n          Oops! Looks like you tried to visit a page that does not exist.\n        </Text>\n      );\n      break;\n\n    default:\n      throw new Error(caught.data || caught.statusText);\n  }\n\n  return (\n    <Document>\n      <VStack h=\"100vh\" justify=\"center\">\n        <Heading>\n          {caught.status}: {caught.statusText}\n        </Heading>\n        {message}\n      </VStack>\n    </Document>\n  );\n}\n\ninterface DocumentProps {\n  children: React.ReactNode;\n}\n\nconst Document = withEmotionCache(\n  ({ children }: DocumentProps, emotionCache) => {\n    const serverSyleData = React.useContext(ServerStyleContext);\n    const clientStyleData = React.useContext(ClientStyleContext);\n\n    // Only executed on client\n    React.useEffect(() => {\n      // re-link sheet container\n      emotionCache.sheet.container = document.head;\n      // re-inject tags\n      const tags = emotionCache.sheet.tags;\n      emotionCache.sheet.flush();\n      tags.forEach((tag) => {\n        (emotionCache.sheet as any)._insertTag(tag);\n      });\n      // reset cache to reapply global styles\n      clientStyleData?.reset();\n    }, []);\n\n    return (\n      <html lang=\"en\">\n        <head>\n          <meta charSet=\"utf-8\" />\n          <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n          <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n          <link rel=\"preconnect\" href=\"https://fonts.gstaticom\" />\n          <link\n            href=\"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;1,300;1,400;1,500;1,600;1,700;1,800&display=swap\"\n            rel=\"stylesheet\"\n          />\n          <Meta />\n          <Links />\n          {serverSyleData?.map(({ key, ids, css }) => (\n            <style\n              key={key}\n              data-emotion={`${key} ${ids.join(\" \")}`}\n              dangerouslySetInnerHTML={{ __html: css }}\n            />\n          ))}\n        </head>\n        <body>\n          {children}\n          <ScrollRestoration />\n          <Scripts />\n          {process.env.NODE_ENV === \"development\" ? <LiveReload /> : null}\n        </body>\n      </html>\n    );\n  }\n);\n"],
  "mappings": "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",
  "names": ["import_react", "React"]
}
